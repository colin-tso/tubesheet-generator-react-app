* {
  position: relative;
  /* Make sure all elements are above the background */
  z-index: 1;
  box-sizing: border-box;
}

:root {
  --darker-background: hsl(200, 7%, 8%);
  --dark-background: hsl(200, 6%, 10%);
  --dark-text: hsl(0, 0%, 0%);
  --light-border: hsl(195, 6%, 26%);
  --dark-border: hsl(0, 0%, 0%);
  --lighter-background: hsl(285, 100%, 99%);
  --light-background: hsl(340, 19%, 94%);
  --light-text: hsl(0, 0%, 100%);
  --light-grey-text: hsl(0, 0%, 50%);
  --light-grey-background: hsl(0, 0%, 15%);
  --dark-grey-text: hsl(0, 0%, 50%);
  --dark-grey-background: hsl(0, 0%, 90%);
  --background: light-dark(var(--lighter-background), var(--dark-background));
  --foreground: light-dark(var(--dark-text), var(--light-text));
  --background-accent: light-dark(var(--light-background), var(--darker-background));
  --input-readonly-text: light-dark(var(--dark-grey-text), var(--light-grey-text));
  --input-readonly-background: light-dark(var(--dark-grey-background), var(--light-grey-background));
  --border-color: light-dark(var(--dark-border), var(--light-border));
  --transition: 0.2s ease;
  --toggle-scale: 0.35;
}

html {
  color: var(--foreground);
  background-color: var(--background);
  transition:
    color var(--transition),
    transform var(--transition),
    background-color var(--transition),
    border-color var(--transition),
    filter var(--transition);
}

.darkmode::before {
  transform: translateX(0);
}

.hidden {
  position: absolute;

  overflow: hidden;

  width: 1px;
  height: 1px;

  white-space: nowrap;

  clip: rect(0 0 0 0);
  clip-path: inset(25%);
}

.toggle-wrapper {
  display: block;
  width: calc(130px * var(--toggle-scale));
  margin: 0; /* Centering for demo */
}

.toggle {
  cursor: pointer;

  position: relative;

  width: calc(130px * var(--toggle-scale));
  height: calc(65px * var(--toggle-scale));
  padding: calc(12px * var(--toggle-scale));

  background: var(--foreground);
  border-radius: calc(32.5px * var(--toggle-scale));

  transition:
    color var(--transition),
    transform var(--transition),
    background-color var(--transition),
    filter var(--transition);
}

.toggle::before {
  content: "";

  position: absolute;
  z-index: 2;
  transform: translate(0);

  display: block;

  width: calc(41px * var(--toggle-scale));
  height: calc(41px * var(--toggle-scale));

  background: var(--background);
  border-radius: calc(20.5px * var(--toggle-scale));

  transition:
    color var(--transition),
    transform var(--transition),
    background-color var(--transition),
    filter var(--transition);
}

.toggle.enabled::before {
  transform: translateX(calc(65px * var(--toggle-scale)));
}

.toggle input {
  position: absolute;
  top: 0;
  opacity: 0;
}

.toggle .icons {
  display: flex;
  align-items: center;
  justify-content: space-between;

  height: 100%;
  margin: 0 calc(5px * var(--toggle-scale));
}

.toggle .icons svg {
  z-index: 0;
  width: calc(32px * var(--toggle-scale));
  height: calc(32px * var(--toggle-scale));
  fill: var(--background);
}

.divider {
  border-bottom-color: var(--foreground);
}

input {
  color: var(--foreground);
  background-color: var(--background);
  transition:
    color var(--transition),
    background-color var(--transition);
}

input[type="text"] {
  border-color: var(--border-color);
  border-color: var(--transition);
}

input[type="text"]:read-only {
  color: var(--input-readonly-text);
  background-color: var(--input-readonly-background);
  transition: border-color var(--border-color);
}

.tubesheet-svg > * {
  stroke: var(--foreground);
  transition: stroke var(--transition);
}

.layout-table td,
.layout-table th,
.layout-table tr,
.layout-table td {
  border-color: var(--border-color);
}

.column-pane.left {
  background-color: var(--background-accent);
}
